
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import pandas as pd

# === C·∫•u h√¨nh Selenium ===
options = Options()
options.add_argument("--start-maximized")
# options.add_argument("--headless")  # N·∫øu mu·ªën ch·∫°y ·∫©n

driver = webdriver.Chrome(options=options)

# === H√†m cu·ªôn trang t·ª´ng ƒëo·∫°n v√† thu th·∫≠p link ngay khi xu·∫•t hi·ªán ===
def get_detail_urls_in_price_range(driver, min_price, max_price):
    # Truy c·∫≠p trang v·ªõi filter gi√° v√† list view
    url = (
        f"https://www.bluenile.com/diamond-search?"
        f"CaratFrom=0.05&Color=K,J,I,H,G,F,E,D"
        f"&PriceFrom={min_price}&PriceTo={max_price}"
        f"&Clarity=SI2,SI1,VS2,VS1,VVS2,VVS1,IF,FL"
        f"&Cut=Good,Very+Good,Ideal,AstorIdeal"
        f"&Sort=Latest&resultsView=List"
    )
    driver.get(url)

    # ƒê·ª£i √≠t nh·∫•t m·ªôt link chi ti·∫øt xu·∫•t hi·ªán
    WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.XPATH, "//a[contains(@href, '/diamond-details/')]") )
    )

    detail_urls = set()
    prev_count = 0
    no_change = 0
    max_no_change = 10

    # Cu·ªôn b·∫±ng window, kh√¥ng d√πng container
    while True:
        # Cu·ªôn window xu·ªëng m·ªôt ƒëo·∫°n
        driver.execute_script("window.scrollBy(0, 300);")
        time.sleep(0.01)

        # Thu th·∫≠p t·∫•t c·∫£ <a> c√≤n trong DOM
        links = driver.find_elements(By.XPATH, "//a[contains(@href, '/diamond-details/')]")
        for link in links:
            href = link.get_attribute("href")
            if href:
                detail_urls.add(href)

        curr_count = len(detail_urls)

        # Ki·ªÉm tra n·∫øu kh√¥ng c√≥ link m·ªõi
        if curr_count == prev_count:
            no_change += 1
        else:
            prev_count = curr_count
            no_change = 0

        # D·ª´ng khi kh√¥ng c√≥ link m·ªõi sau max_no_change l·∫ßn v√† ƒë√£ cu·ªôn t·ªõi ƒë√°y
        scroll_pos = driver.execute_script("return window.pageYOffset + window.innerHeight;")
        scroll_height = driver.execute_script("return document.body.scrollHeight;")
        reached_bottom = scroll_pos >= scroll_height

        if reached_bottom and no_change >= max_no_change:
            break

    print(f"üîç Thu ƒë∆∞·ª£c {len(set(detail_urls))} URL t·ª´ ${min_price} ƒë·∫øn ${max_price}")
    return list(set(detail_urls))

# === Crawl to√†n b·ªô kho·∫£ng gi√° ===
all_urls = []
for price_min in range(4000, 10001, 50):  # 4000-10000 step 50
    price_max = price_min + 49
    try:
        urls = get_detail_urls_in_price_range(driver, price_min, price_max)
        all_urls.extend(urls)
        time.sleep(1)
    except Exception as e:
        print(f"‚ùå L·ªói ·ªü kho·∫£ng gi√° {price_min}-{price_max}: {e}")

# === L∆∞u k·∫øt qu·∫£ ===
df = pd.DataFrame({'url': sorted(set(all_urls))})
df.to_csv("diamond_urls.csv", index=False)
print(f"\n‚úÖ ƒê√£ l∆∞u t·ªïng {len(df)} URL v√†o diamond_urls.csv")

# === ƒê√≥ng tr√¨nh duy·ªát ===
driver.quit()

